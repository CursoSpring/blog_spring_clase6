<?xml version="1.0" encoding="UTF-8"?>
<beans xmlns="http://www.springframework.org/schema/beans"
	xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
	xmlns:jdbc="http://www.springframework.org/schema/jdbc"
	xmlns:context="http://www.springframework.org/schema/context"
	xmlns:tx="http://www.springframework.org/schema/tx"
	xsi:schemaLocation="http://www.springframework.org/schema/jdbc http://www.springframework.org/schema/jdbc/spring-jdbc-3.1.xsd
		http://www.springframework.org/schema/beans http://www.springframework.org/schema/beans/spring-beans.xsd
		http://www.springframework.org/schema/tx http://www.springframework.org/schema/tx/spring-tx-3.1.xsd
		http://www.springframework.org/schema/context http://www.springframework.org/schema/context/spring-context-3.1.xsd">


	<import resource="base-produccion.xml"/>

	<!-- Le dice a srping donde (bajo que paquete) buscar clases con anotaciones 
		spring -->
	<context:component-scan base-package="org.upiita.spring.dao" />

	<!-- Para tener una transaccion declarativa (no programatica) 
	 Con esto estamos instanciando en el contexto de spring de la clase (por el beqan sinonimo de @Autow..) 
	 org.springframework.orm.hibernate4.HibernateTransactionManager
	 
	 con el ref => las inyectamos
	-->
	<bean id="transactionManager"
		class="org.springframework.orm.hibernate4.HibernateTransactionManager">
		<property name="dataSource" ref="dataSource" />
		<property name="sessionFactory" ref="sessionFactory" />
	</bean>
	<tx:annotation-driven transaction-manager="transactionManager" />


</beans>
